/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&caps_word {
    continue-list = <RBKT>, <GRAVE>, <COMMA>, <DOT>, <FSLH>;
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp T>, <&kp GRAVE>, <&none>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp B>, <&kp Q>, <&none>;
        };
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp O>, <&none>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp M>, <&kp RBKT>, <&none>;
        };
        td4: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk LSHIFT>, <&kp RBKT>, <&none>;
        };
    };
    macros {
        m0_HASH: m0_HASH {
            label = "m0_HASH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_ALT>
                , <&macro_tap &kp KP_N3 &kp KP_N5>
                , <&macro_release &kp LEFT_ALT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --------------------------------------------------------------------------------------------------------------
// | Esc (F1) |  F2 |  F3 |  F4  |  F5  |  F6  |                    |  F7  |  F8   |  F9   |  F10 |   F11 |  F12  |
// |   TAB    |  Q  |  W  |  E   |  R   | T(ё) |                    |  Y   |  U    |  I(щ) |  P   |   [   |  Del  |
// |  LOWER   |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   | LOWER |
// |   CTRL   |  Z  |  X  |  C   |  V   | B(й) |  PSCR  |   | MUTE  |  N   |  M(ъ) |  ,    |  .   |   /   | ENTER |
//                  | GUI | ALT  | BSPC | SHFT |  ENTER |   | LANG1 | SPACE|  ,    |  .    |      |
            bindings = <
&mt F1 ESC &kp F2 &kp F3   &kp F4   &kp F5    &kp F6                         &kp F7    &kp F8       &kp F9     &kp F10  &kp F11  &kp F12
&kp TAB    &kp Q  &kp W    &kp E    &kp R     &td0                           &kp Y     &kp U        &td2       &kp P    &kp LBKT &none
&mo 1      &kp A  &kp S    &kp D    &kp F     &kp G                          &kp H     &kp J        &kp K      &kp L    &kp SEMI &mo 1
&kp LCTRL  &kp Z  &kp X    &kp C    &kp V     &td1      &kp PSCRN &kp C_MUTE &kp N     &td3         &kp COMMA  &kp DOT  &kp FSLH &kp RET
                  &kp LGUI &kp LALT &kp BSPC  &kp RSHFT &kp RET   &kp LANG1  &kp SPACE &kp KP_COMMA &kp KP_DOT &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// -----------------------------------------------------------------------------------------------------------
// |  !   |  "   |  №    |  ;    |  %   |  :   |                |      |     |     |      |     | m0_HASH  |
// |  @   |  ""  |  #    |  []   |  ?   |  &   |                |  7   |  8  |  9  |  <   |  >  |   C_W    |
// |      | PGUP |  < -  |  ->   |  ^   |  %   |                |  4   |  5  |  6  |  +   |  -  |          |
// |      | PGDN | Ctl <-| Ctl ->|  v   |  }   |      |  |      |  1   |  2  |  3  |  *   |  /  |  ENTER   |
//               | Номе  | End   |      |      | boot |  | boot | SPACE|  0  |  .  |  =   |
            bindings = <
&kp EXCL    &kp DQT   &kp NUHS  &kp SEMI    &kp PRCNT &kp COLON                         &none     &none   &none   &none           &none        &m0_HASH
&kp AT_SIGN &kp N1    &kp HASH  &kp N3      &kp QMARK &kp AMPS                          &kp N7    &kp N8  &kp N9  &kp LT          &kp GT       &caps_word
&trans      &kp PG_UP &kp LEFT  &kp RIGHT   &kp UP    &kp PRCNT                         &kp N4    &kp N5  &kp N6  &kp KP_PLUS     &kp KP_MINUS &trans
&trans      &kp PG_DN &kp MINUS &kp KP_PLUS &kp DOWN  &kp RBRC  &none       &none       &kp N1    &kp N2  &kp N3  &kp KP_MULTIPLY &kp BSLH     &kp RET
                      &kp HOME  &kp END     &kp BSPC  &kp RSHFT &bootloader &bootloader &kp SPACE &kp N0  &trans  &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4             &trans    &trans    &trans   &trans    &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                   &kp PG_UP &trans    &kp UP   &trans    &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans     &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans  &trans    &trans    &trans   &trans    &trans  &trans
                        &trans       &trans       &trans       &trans  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
   
